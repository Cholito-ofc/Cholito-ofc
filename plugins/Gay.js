const handler = async (msg, { conn }) => {
  const chatId = msg.key.remoteJid;
  const fromUser = msg.key.participant || msg.key.remoteJid;

  // üî∞ Frases para protecci√≥n al Owner
  const frasesOwner = [
    'üõ°Ô∏è *Protecci√≥n Suprema Activada*\n@{user} es el creador, el alfa y el omega de este bot. No se toca.',
    'üëë *Error de Sistema: Intento fallido de escaneo*\n@{user} tiene inmunidad absoluta ante el gay√≥metro.',
    '‚ö†Ô∏è *Advertencia Cr√≠tica*\nEscanear a @{user} puede causar una explosi√≥n del servidor. Operaci√≥n cancelada.',
    'üö® *ALERTA: OBJETIVO RESTRINGIDO*\n@{user} tiene un sello celestial. Intocable por simples mortales.',
    'üîí *Modo Dios Activado*\nNo puedes medir lo que est√° m√°s all√° del arco√≠ris. @{user} est√° fuera del sistema.'
  ];

  const stickersOwner = [
    'https://cdn.russellxz.click/9087aa1c.webp',
    'https://cdn.russellxz.click/85a16aa5.webp',
    'https://cdn.russellxz.click/270edf17.webp',
    'https://cdn.russellxz.click/afd908e6.webp'
  ];

  const audioURL = 'https://cdn.russellxz.click/96beb11b.mp3'; // üéß Tu audio personalizado

  // üß† Obtener JID mencionado o desde mensaje respondido
  let mentionedJid;
  try {
    if (msg.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length) {
      mentionedJid = msg.message.extendedTextMessage.contextInfo.mentionedJid[0];
    } else if (msg.message?.contextInfo?.mentionedJid?.length) {
      mentionedJid = msg.message.contextInfo.mentionedJid[0];
    } else if (msg.message?.extendedTextMessage?.contextInfo?.participant) {
      mentionedJid = msg.message.extendedTextMessage.contextInfo.participant;
    } else if (msg.message?.contextInfo?.participant) {
      mentionedJid = msg.message.contextInfo.participant;
    }
  } catch (e) {
    mentionedJid = null;
  }

  if (!mentionedJid) {
    return await conn.sendMessage(chatId, {
      text: 'üîç *Etiqueta o responde a alguien para escanear su porcentaje gay.*',
    }, { quoted: msg });
  }

  const numero = mentionedJid.split('@')[0];

  // üîí Protecci√≥n al owner
  const isTaggedOwner = Array.isArray(global.owner) && global.owner.some(([id]) => id === numero);
  if (isTaggedOwner) {
    const fraseElegida = frasesOwner[Math.floor(Math.random() * frasesOwner.length)].replace('{user}', numero);
    const stickerElegido = stickersOwner[Math.floor(Math.random() * stickersOwner.length)];

    await conn.sendMessage(chatId, {
      text: fraseElegida,
      mentions: [mentionedJid]
    }, { quoted: msg });

    await conn.sendMessage(chatId, {
      sticker: { url: stickerElegido }
    }, { quoted: msg });

    return;
  }

  // üéØ Escaneo normal
  const porcentaje = Math.floor(Math.random() * 101);
  const barra = (valor) => {
    const total = 10;
    const llenos = Math.round((valor / 100) * total);
    return `[${'‚ñà'.repeat(llenos)}${'‚ñë'.repeat(total - llenos)}]`;
  };

  const mensajeInicial = await conn.sendMessage(chatId, {
    text: `üì° *Escaneando a @${numero}...*\nüî¨ Analizando el arco√≠ris interior...`,
    mentions: [mentionedJid]
  }, { quoted: msg });

  for (let i = 0; i <= porcentaje; i += 20) {
    await new Promise(resolve => setTimeout(resolve, 450));
    await conn.sendMessage(chatId, {
      text: `üîé *Procesando...*\n${barra(i)} ${i}%`,
      edit: mensajeInicial.key
    });
  }

  await new Promise(resolve => setTimeout(resolve, 600));

  // üìù Mensajes personalizados por rango con varios textos para cada uno

  const mensajesBajo = [
    `üòé CASI INVISIBLE, PERO EL ESTILO Y LA ACTITUD HABLAN POR TI.\n   SIGUES EN MODO SECRETO, PERO NO TE CONF√çES, EL ARCO√çRIS TE SIGUE.`,
    `üîµ ERES EL MAESTRO DEL DISFRAZ, SUTIL Y ELEGANTE.\n   EL MUNDO NO TE VE, PERO TU BRILLO EST√Å AH√ç.`,
    `üíß UN TOQUE DE COLOR QUE APENAS SE DEJA VER.\n   EL SECRETO MEJOR GUARDADO DEL ARCO√çRIS.`
  ];

  const mensajesMedio = [
    `‚ö†Ô∏è EL ARCO√çRIS ASOMA, ENTRE RISAS Y MIRADAS.\n   ERES UNA MEZCLA PERFECTA DE MISTERIO Y BRILLO, Y NADIE PUEDE QUITARTE ESA CHISPA QUE TE HACE √öNICO/A.`,
    `üü° UNA ENERG√çA QUE NO PASA DESAPERCIBIDA.\n   TE GUSTA JUGAR ENTRE SOMBRAS Y LUCES.`,
    `üåü EL EQUILIBRIO PERFECTO ENTRE EL MISTERIO Y LA LUZ.\n   DEJAS UNA HUELLA QUE NADIE OLVIDA.`
  ];

  const mensajesAlto = [
    `üî• EL BRILLO ES IRREFUTABLE, EL ESTILO INIGUALABLE.\n   NO PUEDES ESCONDER ESA ENERG√çA QUE IRRADIAS, Y TODOS SABEN QUE ERES LA ALMA DE LA FIESTA Y EL ARCO√çRIS.`,
    `üíÉ EL FLOW Y LA ACTITUD QUE MARCAN LA DIFERENCIA.\n   TU PRESENCIA ILUMINA CUALQUIER LUGAR.`,
    `üåà EL ORGULLO QUE LLEVAS DENTRO SE SIENTE EN EL AMBIENTE.\n   NADIE SE RESISTE A TU CARISMA Y ENCANTO.`
  ];

  const mensajesMuyAlto = [
    `üí• REINA ABSOLUTA DEL ORGULLO, EL GLAMOUR Y LA DIVERSIDAD.\n   TU LUZ ES TAN FUERTE QUE ILUMINA TODO A TU ALREDEDOR, Y NADIE PUEDE NEGAR QUE ERES EL CORAZ√ìN DEL ARCO√çRIS.`,
    `üî• EL FARO QUE GU√çA EL CAMINO DEL ORGULLO.\n   UN REFERENTE DE VALENT√çA, LUZ Y ALEGR√çA.`,
    `üëë EL S√çMBOLO VIVO DEL BRILLO Y LA DIVERSIDAD.\n   TU ENERG√çA TRANSFORMA TODO A TU PASO.`
  ];

  let mensajeFinalList = [];
  if (porcentaje <= 20) mensajeFinalList = mensajesBajo;
  else if (porcentaje <= 50) mensajeFinalList = mensajesMedio;
  else if (porcentaje <= 80) mensajeFinalList = mensajesAlto;
  else mensajeFinalList = mensajesMuyAlto;

  // Seleccionar mensaje aleatorio del rango
  const mensajeFinal = mensajeFinalList[Math.floor(Math.random() * mensajeFinalList.length)];

  // Emojis de porcentaje seg√∫n rango, sin rojo fuerte
  const emojiPorcentaje = porcentaje <= 20 ? 'üî•' :
    porcentaje <= 50 ? 'üåà' :
      porcentaje <= 80 ? 'üíÖ' : 'üî•';

  let decorado = `‚ï≠‚îà‚îà‚îà‚â´[ üéØ *ESC√ÅNER GAY* ]‚â™‚îà‚îà‚îà‚îà‚ïÆ\n\n`;
  decorado += `${emojiPorcentaje} @${numero} es *${porcentaje}% Gay Confirmado* üè≥Ô∏è‚Äçüåà\n`;
  decorado += `${mensajeFinal}\n\n`;
  decorado += `‚ï∞‚îà‚îà‚îà‚îà‚â´ *ùë¨ùíç ùíñùíèùíäùíóùíÜùíìùíîùíê ùíèùíñùíèùíÑùíÇ ùíáùíÇùíçùíçùíÇ*‚â™‚îà‚îà‚îà‚ïØ`;

  await conn.sendMessage(chatId, {
    text: decorado,
    mentions: [mentionedJid],
    edit: mensajeInicial.key
  });

  // üîä Audio al final
  if (audioURL) {
    await conn.sendMessage(chatId, {
      audio: { url: audioURL },
      mimetype: 'audio/mp4',
      ptt: true
    }, { quoted: msg });
  }
};

handler.command = ['gay'];
handler.tags = ['diversi√≥n'];
handler.help = ['gay @usuario o responde'];
handler.register = true;
handler.group = true;

module.exports = handler;